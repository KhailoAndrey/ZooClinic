{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["(function () {\nvar $b8f9b7833fa37166$exports = {};\nconst $b8f9b7833fa37166$var$swiper = new Swiper(\".slider\", {\n    // Optional parameters\n    direction: \"vertical\",\n    loop: true,\n    loopAdditionalSlides: 0,\n    speed: 5000,\n    autoplay: {\n        delay: 7000\n    },\n    effect: \"cube\",\n    cubeEffect: {\n        slideShadows: false\n    },\n    // If we need pagination\n    pagination: {\n        el: \".pagination\",\n        clickable: true\n    },\n    on: {\n        slideChange: function() {\n            var swiper = this;\n            var currentSlide = document.querySelector(\".count\");\n            var slideNumber = (swiper.realIndex + 1).toString().padStart(2, \"0\");\n            currentSlide.textContent = slideNumber;\n        }\n    },\n    // Navigation arrows\n    navigation: {\n        nextEl: \".btnY\"\n    }\n});\nconst $b8f9b7833fa37166$var$slideNumber = 3;\nconst $b8f9b7833fa37166$var$nextButtons = document.querySelectorAll(\".moreBtn\");\n$b8f9b7833fa37166$var$nextButtons.forEach((button)=>{\n    button.addEventListener(\"click\", ()=>{\n        $b8f9b7833fa37166$var$swiper.slideTo($b8f9b7833fa37166$var$slideNumber);\n    });\n});\nconst $b8f9b7833fa37166$var$swiper2 = new Swiper(\".serts-swiper-container\", {\n    loop: true,\n    slidesPerView: 3,\n    effect: \"coverflow\",\n    coverflowEffect: {\n        rotate: 50,\n        slideShadows: false,\n        depth: 100,\n        scale: 1\n    },\n    pagination: {\n        el: \".pagin-btn-group\",\n        clickable: true\n    },\n    // Navigation arrows\n    navigation: {\n        prevEl: \".serts-btn-prev\",\n        nextEl: \".serts-btn-next\"\n    }\n});\nconst $b8f9b7833fa37166$var$swiper3 = new Swiper(\".review-swiper-container\", {\n    loop: true,\n    slidesPerView: 1,\n    speed: 2000,\n    parallax: true,\n    autoplay: {\n        delay: 5000\n    },\n    effect: \"slide\",\n    pagination: {\n        el: \".review-swiper-pagin\",\n        clickable: true\n    },\n    // Navigation arrows\n    navigation: {\n        prevEl: \".review-swiper-prev\",\n        nextEl: \".review-swiper-next\"\n    }\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const blocks = document.querySelectorAll(\".ques-main-block-item\");\n    blocks.forEach((block)=>{\n        const plusBtn = block.querySelector(\".plus-btn\");\n        const minusBtn = block.querySelector(\".minus-btn\");\n        const openAnswer = block.querySelector(\".open-answer\");\n        plusBtn.addEventListener(\"click\", function() {\n            // Закрываем все остальные блоки\n            blocks.forEach((otherBlock)=>{\n                if (otherBlock !== block) {\n                    otherBlock.querySelector(\".open-answer\").classList.add(\"hidden\");\n                    otherBlock.querySelector(\".plus-btn\").classList.remove(\"hidden\");\n                    otherBlock.querySelector(\".minus-btn\").classList.add(\"hidden\");\n                }\n            });\n            // Открываем текущий блок\n            openAnswer.classList.remove(\"hidden\");\n            plusBtn.classList.add(\"hidden\");\n            minusBtn.classList.remove(\"hidden\");\n        });\n        minusBtn.addEventListener(\"click\", function() {\n            // Закрываем текущий блок\n            openAnswer.classList.add(\"hidden\");\n            plusBtn.classList.remove(\"hidden\");\n            minusBtn.classList.add(\"hidden\");\n        });\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const openPopupButtons = document.querySelectorAll(\".header__filii, .header__contacts-item-btn\");\n    const popups = document.querySelectorAll(\".filii-popap, .popap-phone\");\n    // Функция для переключения видимости попапа\n    const togglePopup = (popup)=>{\n        if (popup.classList.contains(\"hidden\")) {\n            popup.classList.remove(\"hidden\");\n            setTimeout(()=>{\n                popup.classList.add(\"show\");\n                openPopupButtons.forEach((button)=>button.classList.add(\"active\")); // Добавляем класс active при открытии попапа\n            }, 10); // Небольшая задержка для срабатывания анимации\n        } else {\n            popup.classList.remove(\"show\");\n            setTimeout(()=>{\n                popup.classList.add(\"hidden\");\n                openPopupButtons.forEach((button)=>button.classList.remove(\"active\")); // Убираем класс active при закрытии попапа\n            }, 500); // Время должно совпадать с transition-duration в CSS\n        }\n    };\n    // Открыть/закрыть попап по клику на кнопку\n    openPopupButtons.forEach((button, index)=>{\n        button.addEventListener(\"click\", (e)=>{\n            e.stopPropagation(); // Останавливаем всплытие события\n            togglePopup(popups[index]);\n        });\n    });\n    // Закрыть попап при клике вне его области\n    document.addEventListener(\"click\", (e)=>{\n        popups.forEach((popup, index)=>{\n            if (!popup.contains(e.target) && !openPopupButtons[index].contains(e.target)) {\n                if (!popup.classList.contains(\"hidden\")) togglePopup(popup);\n            }\n        });\n    });\n    // Закрыть попап по нажатию клавиши Esc\n    document.addEventListener(\"keydown\", (e)=>{\n        if (e.key === \"Escape\") popups.forEach((popup, index)=>{\n            if (!popup.classList.contains(\"hidden\")) {\n                togglePopup(popup);\n                openPopupButtons[index].blur(); // Убираем фокус со всех кнопок\n            }\n        });\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const openFormOverlayButtons = document.querySelectorAll(\".form-popap-btn\");\n    const formOverlay = document.querySelector(\".overlay-container\");\n    const backdropOverlay = document.querySelector(\".backdrop-overlay\");\n    const backdropOverlaySubmit = document.querySelector(\".backdrop-overlay-submit\");\n    const closeButtons = document.querySelectorAll(\".close-img, .cls-btn, .back-btn a\");\n    // Функция для показа оверлея\n    const showOverlay = (overlay)=>{\n        formOverlay.classList.remove(\"hidden\");\n        setTimeout(()=>{\n            overlay.classList.add(\"show\");\n        }, 10);\n    };\n    // Функция для скрытия оверлея\n    const hideOverlay = (overlay)=>{\n        overlay.classList.remove(\"show\");\n        setTimeout(()=>{\n            if (!backdropOverlay.classList.contains(\"show\") && !backdropOverlaySubmit.classList.contains(\"show\")) formOverlay.classList.add(\"hidden\");\n        }, 500); // Соответствие длительности перехода\n    };\n    // Показываем первый оверлей по клику на кнопку\n    openFormOverlayButtons.forEach((button)=>{\n        button.addEventListener(\"click\", ()=>{\n            showOverlay(backdropOverlay);\n            button.blur(); // Убираем фокус с кнопки\n        });\n    });\n    // Обработка отправки формы\n    document.addEventListener(\"submit\", (e)=>{\n        if (e.target.matches(\"#overlay-contact-form, #contact-form\")) {\n            e.preventDefault(); // Предотвращаем фактическую отправку формы\n            hideOverlay(backdropOverlay);\n            setTimeout(()=>{\n                showOverlay(backdropOverlaySubmit);\n            }, 500); // Ждем пока первый оверлей скроется\n        }\n    });\n    // Закрытие оверлеев по нажатию клавиши Escape\n    document.addEventListener(\"keydown\", (e)=>{\n        if (e.key === \"Escape\") {\n            if (backdropOverlay.classList.contains(\"show\")) hideOverlay(backdropOverlay);\n            else if (backdropOverlaySubmit.classList.contains(\"show\")) {\n                hideOverlay(backdropOverlaySubmit);\n                document.activeElement.blur();\n            }\n        }\n    });\n    // Закрытие оверлеев при клике вне области контента\n    formOverlay.addEventListener(\"click\", (e)=>{\n        if (e.target === backdropOverlay && backdropOverlay.classList.contains(\"show\")) hideOverlay(backdropOverlay);\n        else if (e.target === backdropOverlaySubmit && backdropOverlaySubmit.classList.contains(\"show\")) hideOverlay(backdropOverlaySubmit);\n    });\n    // Закрытие оверлеев при клике на кнопки закрытия или ссылку \"Назад до головної\"\n    closeButtons.forEach((button)=>{\n        button.addEventListener(\"click\", (e)=>{\n            e.preventDefault();\n            if (backdropOverlay.classList.contains(\"show\")) hideOverlay(backdropOverlay);\n            else if (backdropOverlaySubmit.classList.contains(\"show\")) {\n                hideOverlay(backdropOverlaySubmit);\n                document.activeElement.blur();\n            }\n        });\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const modal = document.getElementById(\"imageModal\");\n    const modalImg = document.getElementById(\"modalImage\");\n    const closeBtn = document.querySelector(\".close-img-btn\");\n    document.querySelectorAll(\".zoomable-image\").forEach((img)=>{\n        img.onclick = function() {\n            modal.style.display = \"block\";\n            modalImg.src = this.src;\n        };\n    });\n    closeBtn.addEventListener(\"click\", function() {\n        modal.style.display = \"none\";\n    });\n    window.onclick = function(event) {\n        if (event.target == modal) modal.style.display = \"none\";\n    };\n    document.addEventListener(\"keydown\", function(event) {\n        if (event.key === \"Escape\") modal.style.display = \"none\";\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const items = document.querySelectorAll(\".coop-vacan-item\");\n    items.forEach((item)=>{\n        const plusBtn = item.querySelector(\".plus-btn\");\n        const minusBtn = item.querySelector(\".minus-btn\");\n        const opis = item.querySelector(\".coop-vacan-item-opis\");\n        plusBtn.addEventListener(\"click\", function() {\n            // Закрываем все остальные элементы\n            items.forEach((otherItem)=>{\n                if (otherItem !== item) {\n                    otherItem.querySelector(\".coop-vacan-item-opis\");\n                    otherItem.querySelector(\".plus-btn\");\n                    otherItem.querySelector(\".minus-btn\");\n                }\n            });\n            // Открываем текущий элемент\n            opis.classList.remove(\"hidden\");\n            plusBtn.classList.add(\"hidden\");\n            minusBtn.classList.remove(\"hidden\");\n            item.classList.add(\"vacan-open\");\n        });\n        minusBtn.addEventListener(\"click\", function() {\n            // Закрываем текущий элемент\n            opis.classList.add(\"hidden\");\n            plusBtn.classList.remove(\"hidden\");\n            minusBtn.classList.add(\"hidden\");\n            item.classList.remove(\"vacan-open\");\n        });\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Получаем все кнопки с классом vacan-btn-link\n    const vacanBtnLinks = document.querySelectorAll(\".vacan-btn-link\");\n    const vacanFormSubmit = document.querySelector(\".vacan-form-submit\");\n    const closeButton = vacanFormSubmit.querySelector(\".vacan-form-submit-btn-close\");\n    const closeVacanOverlay = document.querySelector(\".vacan-overlay-close\");\n    const vacanSubmitOverlay = document.querySelector(\".vacan-submit-overlay\");\n    const vacanBtnLinkSubmit = document.querySelector(\".vacan-btn-link-submit\");\n    const openFormButton = document.querySelector(\".open-form\");\n    vacanBtnLinks.forEach(function(button) {\n        button.addEventListener(\"click\", function() {\n            // Находим соответствующие элементы\n            const parent = button.closest(\".coop-vacan-item\");\n            const opis = parent.querySelector(\".coop-vacan-item-opis\");\n            const minusBtn = parent.querySelector(\".minus-btn\");\n            const plusBtn = parent.querySelector(\".plus-btn\");\n            // Добавляем/убираем классы hidden\n            opis.classList.add(\"hidden\");\n            parent.classList.remove(\"vacan-open\");\n            minusBtn.classList.add(\"hidden\");\n            plusBtn.classList.remove(\"hidden\");\n            vacanFormSubmit.classList.remove(\"hidden\");\n        });\n    });\n    // Добавляем обработчик события на кнопку закрытия\n    closeButton.addEventListener(\"click\", function() {\n        // Добавляем класс hidden к vacan-form-submit\n        vacanFormSubmit.classList.add(\"hidden\");\n    });\n    function validateForm() {\n        // Получаем значения полей формы\n        const name = document.getElementById(\"vacan-name\").value.trim();\n        const phone = document.getElementById(\"vacan-phone\").value.trim();\n        const privacyPolicy = document.getElementById(\"vacan-privacy-policy\").checked;\n        // Проверяем, что все обязательные поля заполнены\n        if (name && phone && privacyPolicy) // Если все поля заполнены, возвращаем true\n        return true;\n        else // Если какое-то обязательное поле не заполнено, возвращаем false\n        return false;\n    }\n    vacanBtnLinkSubmit.addEventListener(\"click\", function(event) {\n        event.preventDefault();\n        // Проверяем заполнение обязательных полей перед отправкой формы\n        if (validateForm()) {\n            // Если форма валидна, добавляем класс hidden к vacan-form-submit\n            vacanFormSubmit.classList.add(\"hidden\");\n            // Убираем класс hidden с vacan-submit-overlay\n            vacanSubmitOverlay.classList.remove(\"hidden\");\n        } else // Если форма не валидна, выводим сообщение об ошибке\n        alert(\"Please fill in all required fields.\");\n    });\n    // Добавляем обработчик события на кнопку открытия формы\n    openFormButton.addEventListener(\"click\", function() {\n        // Показываем форму сабмита\n        vacanFormSubmit.classList.remove(\"hidden\");\n    });\n    closeVacanOverlay.addEventListener(\"click\", function() {\n        vacanSubmitOverlay.classList.add(\"hidden\");\n    });\n});\n\n})();\n//# sourceMappingURL=index.d4fd09ad.js.map\n","const swiper = new Swiper('.slider', {\n  // Optional parameters\n  direction: 'vertical',\n  loop: true,\n  loopAdditionalSlides: 0,\n  speed: 5000,\n  autoplay: {\n    delay: 7000,\n  },\n  effect: 'cube',\n  cubeEffect: {\n    slideShadows: false,\n  },\n  // If we need pagination\n  pagination: {\n    el: '.pagination',\n    clickable: true,\n  },\n  on: {\n    slideChange: function () {\n      var swiper = this;\n      var currentSlide = document.querySelector('.count');\n      var slideNumber = (swiper.realIndex + 1).toString().padStart(2, '0');\n      currentSlide.textContent = slideNumber;\n    },\n  },\n  // Navigation arrows\n  navigation: {\n    nextEl: '.btnY',\n  },\n});\nconst slideNumber = 3;\nconst nextButtons = document.querySelectorAll('.moreBtn');\nnextButtons.forEach(button => {\n  button.addEventListener('click', () => {\n    swiper.slideTo(slideNumber);\n  });\n});\n\nconst swiper2 = new Swiper('.serts-swiper-container', {\n  loop: true,\n  slidesPerView: 3,\n  effect: 'coverflow',\n  coverflowEffect: {\n    rotate: 50,\n    slideShadows: false,\n    depth: 100,\n    scale: 1,\n  },\n  pagination: {\n    el: '.pagin-btn-group',\n    clickable: true,\n  },\n  // Navigation arrows\n  navigation: {\n    prevEl: '.serts-btn-prev',\n    nextEl: '.serts-btn-next',\n  },\n});\n\nconst swiper3 = new Swiper('.review-swiper-container', {\n  loop: true,\n  slidesPerView: 1,\n  speed: 2000,\n  parallax: true,\n  autoplay: {\n    delay: 5000,\n  },\n  effect: 'slide',\n  pagination: {\n    el: '.review-swiper-pagin',\n    clickable: true,\n  },\n  // Navigation arrows\n  navigation: {\n    prevEl: '.review-swiper-prev',\n    nextEl: '.review-swiper-next',\n  },\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const blocks = document.querySelectorAll('.ques-main-block-item');\n\n  blocks.forEach(block => {\n    const plusBtn = block.querySelector('.plus-btn');\n    const minusBtn = block.querySelector('.minus-btn');\n    const openAnswer = block.querySelector('.open-answer');\n\n    plusBtn.addEventListener('click', function () {\n      // Закрываем все остальные блоки\n      blocks.forEach(otherBlock => {\n        if (otherBlock !== block) {\n          otherBlock.querySelector('.open-answer').classList.add('hidden');\n          otherBlock.querySelector('.plus-btn').classList.remove('hidden');\n          otherBlock.querySelector('.minus-btn').classList.add('hidden');\n        }\n      });\n\n      // Открываем текущий блок\n      openAnswer.classList.remove('hidden');\n      plusBtn.classList.add('hidden');\n      minusBtn.classList.remove('hidden');\n    });\n\n    minusBtn.addEventListener('click', function () {\n      // Закрываем текущий блок\n      openAnswer.classList.add('hidden');\n      plusBtn.classList.remove('hidden');\n      minusBtn.classList.add('hidden');\n    });\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const openPopupButtons = document.querySelectorAll(\n    '.header__filii, .header__contacts-item-btn'\n  );\n  const popups = document.querySelectorAll('.filii-popap, .popap-phone');\n\n  // Функция для переключения видимости попапа\n  const togglePopup = popup => {\n    if (popup.classList.contains('hidden')) {\n      popup.classList.remove('hidden');\n      setTimeout(() => {\n        popup.classList.add('show');\n        openPopupButtons.forEach(button => button.classList.add('active')); // Добавляем класс active при открытии попапа\n      }, 10); // Небольшая задержка для срабатывания анимации\n    } else {\n      popup.classList.remove('show');\n      setTimeout(() => {\n        popup.classList.add('hidden');\n        openPopupButtons.forEach(button => button.classList.remove('active')); // Убираем класс active при закрытии попапа\n      }, 500); // Время должно совпадать с transition-duration в CSS\n    }\n  };\n\n  // Открыть/закрыть попап по клику на кнопку\n  openPopupButtons.forEach((button, index) => {\n    button.addEventListener('click', e => {\n      e.stopPropagation(); // Останавливаем всплытие события\n      togglePopup(popups[index]);\n    });\n  });\n\n  // Закрыть попап при клике вне его области\n  document.addEventListener('click', e => {\n    popups.forEach((popup, index) => {\n      if (\n        !popup.contains(e.target) &&\n        !openPopupButtons[index].contains(e.target)\n      ) {\n        if (!popup.classList.contains('hidden')) {\n          togglePopup(popup);\n        }\n      }\n    });\n  });\n\n  // Закрыть попап по нажатию клавиши Esc\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape') {\n      popups.forEach((popup, index) => {\n        if (!popup.classList.contains('hidden')) {\n          togglePopup(popup);\n          openPopupButtons[index].blur(); // Убираем фокус со всех кнопок\n        }\n      });\n    }\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const openFormOverlayButtons = document.querySelectorAll('.form-popap-btn');\n  const formOverlay = document.querySelector('.overlay-container');\n  const backdropOverlay = document.querySelector('.backdrop-overlay');\n  const backdropOverlaySubmit = document.querySelector(\n    '.backdrop-overlay-submit'\n  );\n  const closeButtons = document.querySelectorAll(\n    '.close-img, .cls-btn, .back-btn a'\n  );\n\n  // Функция для показа оверлея\n  const showOverlay = overlay => {\n    formOverlay.classList.remove('hidden');\n    setTimeout(() => {\n      overlay.classList.add('show');\n    }, 10);\n  };\n\n  // Функция для скрытия оверлея\n  const hideOverlay = overlay => {\n    overlay.classList.remove('show');\n    setTimeout(() => {\n      if (\n        !backdropOverlay.classList.contains('show') &&\n        !backdropOverlaySubmit.classList.contains('show')\n      ) {\n        formOverlay.classList.add('hidden');\n      }\n    }, 500); // Соответствие длительности перехода\n  };\n\n  // Показываем первый оверлей по клику на кнопку\n  openFormOverlayButtons.forEach(button => {\n    button.addEventListener('click', () => {\n      showOverlay(backdropOverlay);\n      button.blur(); // Убираем фокус с кнопки\n    });\n  });\n\n  // Обработка отправки формы\n  document.addEventListener('submit', e => {\n    if (e.target.matches('#overlay-contact-form, #contact-form')) {\n      e.preventDefault(); // Предотвращаем фактическую отправку формы\n      hideOverlay(backdropOverlay);\n      setTimeout(() => {\n        showOverlay(backdropOverlaySubmit);\n      }, 500); // Ждем пока первый оверлей скроется\n    }\n  });\n\n  // Закрытие оверлеев по нажатию клавиши Escape\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape') {\n      if (backdropOverlay.classList.contains('show')) {\n        hideOverlay(backdropOverlay);\n      } else if (backdropOverlaySubmit.classList.contains('show')) {\n        hideOverlay(backdropOverlaySubmit);\n        document.activeElement.blur();\n      }\n    }\n  });\n\n  // Закрытие оверлеев при клике вне области контента\n  formOverlay.addEventListener('click', e => {\n    if (\n      e.target === backdropOverlay &&\n      backdropOverlay.classList.contains('show')\n    ) {\n      hideOverlay(backdropOverlay);\n    } else if (\n      e.target === backdropOverlaySubmit &&\n      backdropOverlaySubmit.classList.contains('show')\n    ) {\n      hideOverlay(backdropOverlaySubmit);\n    }\n  });\n\n  // Закрытие оверлеев при клике на кнопки закрытия или ссылку \"Назад до головної\"\n  closeButtons.forEach(button => {\n    button.addEventListener('click', e => {\n      e.preventDefault();\n      if (backdropOverlay.classList.contains('show')) {\n        hideOverlay(backdropOverlay);\n      } else if (backdropOverlaySubmit.classList.contains('show')) {\n        hideOverlay(backdropOverlaySubmit);\n        document.activeElement.blur();\n      }\n    });\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const modal = document.getElementById('imageModal');\n  const modalImg = document.getElementById('modalImage');\n  const closeBtn = document.querySelector('.close-img-btn');\n\n  document.querySelectorAll('.zoomable-image').forEach(img => {\n    img.onclick = function () {\n      modal.style.display = 'block';\n      modalImg.src = this.src;\n    };\n  });\n\n  closeBtn.addEventListener('click', function () {\n    modal.style.display = 'none';\n  });\n\n  window.onclick = function (event) {\n    if (event.target == modal) {\n      modal.style.display = 'none';\n    }\n  };\n\n  document.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n      modal.style.display = 'none';\n    }\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const items = document.querySelectorAll('.coop-vacan-item');\n\n  items.forEach(item => {\n    const plusBtn = item.querySelector('.plus-btn');\n    const minusBtn = item.querySelector('.minus-btn');\n    const opis = item.querySelector('.coop-vacan-item-opis');\n\n    plusBtn.addEventListener('click', function () {\n      // Закрываем все остальные элементы\n      items.forEach(otherItem => {\n        if (otherItem !== item) {\n          otherItem.querySelector('.coop-vacan-item-opis');\n          otherItem.querySelector('.plus-btn');\n          otherItem.querySelector('.minus-btn');\n        }\n      });\n\n      // Открываем текущий элемент\n      opis.classList.remove('hidden');\n      plusBtn.classList.add('hidden');\n      minusBtn.classList.remove('hidden');\n      item.classList.add('vacan-open');\n    });\n\n    minusBtn.addEventListener('click', function () {\n      // Закрываем текущий элемент\n      opis.classList.add('hidden');\n      plusBtn.classList.remove('hidden');\n      minusBtn.classList.add('hidden');\n      item.classList.remove('vacan-open');\n    });\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Получаем все кнопки с классом vacan-btn-link\n  const vacanBtnLinks = document.querySelectorAll('.vacan-btn-link');\n  const vacanFormSubmit = document.querySelector('.vacan-form-submit');\n  const closeButton = vacanFormSubmit.querySelector(\n    '.vacan-form-submit-btn-close'\n  );\n  const closeVacanOverlay = document.querySelector('.vacan-overlay-close');\n  const vacanSubmitOverlay = document.querySelector('.vacan-submit-overlay');\n  const vacanBtnLinkSubmit = document.querySelector('.vacan-btn-link-submit');\n  const openFormButton = document.querySelector('.open-form');\n\n  vacanBtnLinks.forEach(function (button) {\n    button.addEventListener('click', function () {\n      // Находим соответствующие элементы\n      const parent = button.closest('.coop-vacan-item');\n      const opis = parent.querySelector('.coop-vacan-item-opis');\n      const minusBtn = parent.querySelector('.minus-btn');\n      const plusBtn = parent.querySelector('.plus-btn');\n\n      // Добавляем/убираем классы hidden\n      opis.classList.add('hidden');\n      parent.classList.remove('vacan-open');\n      minusBtn.classList.add('hidden');\n      plusBtn.classList.remove('hidden');\n      vacanFormSubmit.classList.remove('hidden');\n    });\n  });\n\n  // Добавляем обработчик события на кнопку закрытия\n  closeButton.addEventListener('click', function () {\n    // Добавляем класс hidden к vacan-form-submit\n    vacanFormSubmit.classList.add('hidden');\n  });\n\n  function validateForm() {\n    // Получаем значения полей формы\n    const name = document.getElementById('vacan-name').value.trim();\n    const phone = document.getElementById('vacan-phone').value.trim();\n    const privacyPolicy = document.getElementById(\n      'vacan-privacy-policy'\n    ).checked;\n\n    // Проверяем, что все обязательные поля заполнены\n    if (name && phone && privacyPolicy) {\n      // Если все поля заполнены, возвращаем true\n      return true;\n    } else {\n      // Если какое-то обязательное поле не заполнено, возвращаем false\n      return false;\n    }\n  }\n  vacanBtnLinkSubmit.addEventListener('click', function (event) {\n    event.preventDefault();\n    // Проверяем заполнение обязательных полей перед отправкой формы\n    if (validateForm()) {\n      // Если форма валидна, добавляем класс hidden к vacan-form-submit\n      vacanFormSubmit.classList.add('hidden');\n      // Убираем класс hidden с vacan-submit-overlay\n      vacanSubmitOverlay.classList.remove('hidden');\n    } else {\n      // Если форма не валидна, выводим сообщение об ошибке\n      alert('Please fill in all required fields.');\n    }\n  });\n  // Добавляем обработчик события на кнопку открытия формы\n  openFormButton.addEventListener('click', function () {\n    // Показываем форму сабмита\n    vacanFormSubmit.classList.remove('hidden');\n  });\n  closeVacanOverlay.addEventListener('click', function () {\n    vacanSubmitOverlay.classList.add('hidden');\n  });\n});\n"],"names":["$b8f9b7833fa37166$var$swiper","Swiper","direction","loop","loopAdditionalSlides","speed","autoplay","delay","effect","cubeEffect","slideShadows","pagination","el","clickable","on","slideChange","currentSlide","document","querySelector","slideNumber","swiper","realIndex","toString","padStart","textContent","navigation","nextEl","$b8f9b7833fa37166$var$nextButtons","querySelectorAll","forEach","button","addEventListener","slideTo","slidesPerView","coverflowEffect","rotate","depth","scale","prevEl","parallax","blocks","block","plusBtn","minusBtn","openAnswer","otherBlock","classList","add","remove","openPopupButtons","popups","togglePopup","popup","contains","setTimeout","index","e","stopPropagation","target","key","blur","openFormOverlayButtons","formOverlay","backdropOverlay","backdropOverlaySubmit","closeButtons","showOverlay","overlay","hideOverlay","matches","preventDefault","activeElement","modal","getElementById","modalImg","closeBtn","img","onclick","style","display","src","window","event","items","item","opis","otherItem","vacanBtnLinks","vacanFormSubmit","closeButton","closeVacanOverlay","vacanSubmitOverlay","vacanBtnLinkSubmit","openFormButton","parent","closest","validateForm","name","value","trim","phone","privacyPolicy","checked","alert"],"version":3,"file":"index.d4fd09ad.js.map"}